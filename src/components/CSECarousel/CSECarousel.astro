---
export interface Props {
    id: string;
    size: number;
}

const { id, size } = Astro.props;
---
<div id={id} class="carousel slide" data-bs-ride="false">
    <div class="carousel-indicators">
        {
            Array.from({length: size}).map((_, i) => {
                var element;
                if (i === 0) {
                    element = (<button type="button" data-bs-target={`#${id}`} data-bs-slide-to={i} class="active" aria-current="true" aria-labelledby={`#${id}-${i}`}></button>);
                } else {
                    element = (<button type="button" data-bs-target={`#${id}`} data-bs-slide-to={i} aria-labelledby={`#${id}-${i}`}></button>);
                }
                return element;
            })
        }
    </div>
    <div class="carousel-inner">
        <slot />
    </div>
    <button class="carousel-control-prev" type="button" data-bs-target={`#${id}`} data-bs-slide="prev">
        <span class="carousel-icons carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target={`#${id}`} data-bs-slide="next">
        <span class="carousel-icons carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>